name: Playwright

on:
  workflow_call:
    inputs:
      number-of-tests-per-run:
        default: 3
        type: number
      target-directory:
        default: modules/**/tests/playwright
        type: string

jobs:
  yarn-install: # this job is needed to cache the node_modules folder
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest]
    name: yarn install
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v3
      - name: Install dependencies
        run: yarn install --immutable --immutable-cache
        id: yarn
      - name: Cache node_modules
        if: steps.yarn.outputs.cache-hit != 'true'
        uses: actions/cache@v3
        with:
          path: node_modules
          key: ${{ $RUNNER_OS }}-yarn-${{ hashFiles('yarn.lock') }}
          restore-keys: |
            ${{ $RUNNER_OS }}-yarn-


  set-chunks:
    runs-on: ubuntu-latest
    name: set chunks
    outputs:
      # will contain a json string with an array of n elements, each being a string of spec files delimited by ,
      test-chunks: ${{ steps['set-test-chunks'].outputs['test-chunks'] }}
      # json string with ids to use in the next job matrix depending on how many elements are in the above array, eg: [0,1]
      test-chunk-ids: ${{ steps['set-test-chunk-ids'].outputs['test-chunk-ids'] }}
    steps:
      - uses: actions/checkout@v3
      - id: set-test-chunks
        name: Set Chunks
        # get all spec files from the target-directory directory, group them to be at most number-of-tests-per-run (xargs -n...) at a time and transform them to json
        run: echo "test-chunks=$(find ${{inputs.target-directory}} -type f -name "*.js" | xargs -n${{inputs.number-of-tests-per-run}} | tr ' ' ',' | jq -R . | jq -s -cM .)" >> $GITHUB_OUTPUT
      - id: set-test-chunk-ids
        name: Set Chunk IDs
        # get the number of elements from the above array as an array of indexes
        run: echo "test-chunk-ids=$(echo '${{ steps['set-test-chunks'].outputs['test-chunks'] }}' | jq -cM 'to_entries | map(.key)')" >> $GITHUB_OUTPUT

  test:
    strategy:
      fail-fast: false
      matrix:
        chunk: ${{fromJSON(needs.set-chunks.outputs['test-chunk-ids'])}}
        os: [ubuntu-latest, windows-latest]
    runs-on: ${{ matrix.os }}
    needs:
      - set-chunks
    name: chunk ${{ matrix.chunk }} - ${{ $RUNNER_OS }}
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: 18
          cache: 'yarn'
      - name: Restore yarn cache
        uses: actions/cache@v3
        with:
          path: node_modules
          key: ${{ $RUNNER_OS }}-yarn-${{ hashFiles('yarn.lock') }}
      - run: npx playwright install chromium
      - run: |
          if [ "${{ matrix.os }}" == "ubuntu-latest" ]; then
            npx playwright test $(echo '${{ needs.set-chunks.outputs['test-chunks'] }}' | jq -cMr '.[${{ matrix.chunk }}] | @text' | tr ',' ' ') --forbid-only
          else
            $array = ConvertFrom-Json '${{ needs.set-chunks.outputs['test-chunks'] }}'; $index = ${{ matrix.chunk }}; $tests = ($array[$index] -split ',') -join ' '; $code = "npx playwright test $tests --forbid-only"; Invoke-Expression $code
          fi
