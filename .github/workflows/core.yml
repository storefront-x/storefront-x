name: Core

on:
  push:
    branches:
      - main
  pull_request:

jobs:
  checkout:
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest]
    runs-on: ${{ matrix.os }}
    name: checkout (${{ matrix.os }})
    outputs:
      path: ${{ steps.checkout.outputs.path }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        # with:
        #   submodules: 'recursive'
        id: checkout
      - name: Cache checkout
        uses: actions/cache@v3
        with:
          path: |
            ${{ steps.checkout.outputs.path }}/.git
          key: ${{ runner.os }}-git-${{ hashFiles('**/.gitmodules') }}
          restore-keys: |
            ${{ runner.os }}-git-

  # yarn:
  #   strategy:
  #     fail-fast: false
  #     matrix:
  #       os: [ubuntu-latest, windows-latest]
  #   runs-on: ${{ matrix.os }}
  #   name: yarn install (${{ matrix.os }})
  #   needs:
  #     - checkout
  #   steps:
  #     - uses: actions/checkout@v3
  #     - uses: actions/setup-node@v3

  playwright:
    strategy:
      fail-fast: false
      matrix:
        count: [1, 2, 3]
        os: [ubuntu-latest, windows-latest]
    runs-on: ${{ matrix.os }}
    needs: [checkout]
    name: playwright shard ${{ matrix.count }} (${{ matrix.os }})
    steps:
      - name: Use cached checkout
        uses: actions/checkout@v3
        with:
          path: ${{ needs.checkout.outputs.path }}
      - uses: actions/setup-node@v3
        with:
          node-version: 18
          cache: 'yarn'
      - run: yarn install --immutable --immutable-cache
      - run: npx playwright install chromium
      - run: npx playwright test --shard=${{ matrix.count }}/3 --forbid-only

  docs:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: 18
          cache: 'yarn'
      - run: yarn install --immutable --immutable-cache
      - run: yarn docs:build

  create-script-with-yarn:
    strategy:
      fail-fast: false
      matrix:
        integration: [magento, shopware, px]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/setup-node@v3
        with:
          node-version: 18
      - run: |
          yarn create storefront-x --directory=app --integration=${{ matrix.integration }}
          cd app
          yarn install
          yarn build

  create-script-with-npm:
    strategy:
      fail-fast: false
      matrix:
        integration: [magento, shopware, px]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/setup-node@v3
        with:
          node-version: 18
      - run: |
          npm create storefront-x@latest -y -- --directory=app --integration=${{ matrix.integration }}
          cd app
          npm install
          npm run build
