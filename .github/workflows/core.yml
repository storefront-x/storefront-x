name: Core

on:
  push:
    branches:
      - main
  pull_request:

jobs:
  # This job is used to cache the yarn dependencies which can be used by all other jobs
  # without having to install them in each job (which takes a lot of time)
  # It is stored by hash of the yarn.lock file, so it will be invalidated if the dependencies change
  # if not, it will be restored from cache (also in other workflows)
  yarn:
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest]
    runs-on: ${{ matrix.os }}
    name: yarn install (${{ matrix.os }})
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: 18
          cache: 'yarn'
      - name: Install dependencies
        run: yarn install --immutable --immutable-cache
      - name: Cache node_modules
        uses: actions/cache@v3
        with:
          path: node_modules
          key: ${{ runner.os }}-yarn-${{ hashFiles('yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

  playwright:
    strategy:
      fail-fast: false
      matrix:
        count: [1, 2, 3]
        os: [ubuntu-latest, windows-latest]
    runs-on: ${{ matrix.os }}
    needs: [yarn]
    name: playwright shard ${{ matrix.count }} (${{ matrix.os }})
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Restore cached node_modules
        uses: actions/cache@v3
        with:
          path: node_modules
          key: ${{ runner.os }}-yarn-${{ hashFiles('yarn.lock') }}
      - uses: actions/setup-node@v3
        with:
          node-version: 18
          cache: 'yarn'
      - name: Run tests - shard ${{ matrix.count }}/3
        run: |
          npx playwright install chromium
          npx playwright test --shard=${{ matrix.count }}/3 --forbid-only

  docs:
    runs-on: ubuntu-latest
    needs: [yarn]
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Restore cached node_modules
        uses: actions/cache@v3
        id: restore-cache
        with:
          path: node_modules
          key: ${{ runner.os }}-yarn-${{ hashFiles('yarn.lock') }}
      - uses: actions/setup-node@v3
        with:
          node-version: 18
          cache: 'yarn'
      - run: yarn docs:build

  create-script-with-yarn:
    strategy:
      fail-fast: false
      matrix:
        integration: [magento, shopware, px]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/setup-node@v3
        with:
          node-version: 18
      - run: |
          yarn create storefront-x --directory=app --integration=${{ matrix.integration }}
          cd app
          yarn install
          yarn build

  create-script-with-npm:
    strategy:
      fail-fast: false
      matrix:
        integration: [magento, shopware, px]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/setup-node@v3
        with:
          node-version: 18
      - run: |
          npm create storefront-x@latest -y -- --directory=app --integration=${{ matrix.integration }}
          cd app
          npm install
          npm run build
