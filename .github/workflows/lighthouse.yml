name: Performance audit

on:
  workflow_call:
    inputs:
      storefront-x-config:
        required: true
        type: string
      product-detail-page:
        required: true
        type: string
      category-page:
        required: true
        type: string

jobs:
  # This job will cache yarn dependencies when they already not exist in cache. If exists, it will restore them
  # without having to install them in each job (which takes a lot of time)
  # They are stored by hash of the yarn.lock file, so they will be invalidated if the dependencies themselves change
  yarn:
    runs-on: ubuntu-latest
    name: yarn install
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: 18
      - name: Restore node_modules from cache
        id: cache-nodemodules
        uses: actions/cache/restore@v3
        with:
          path: node_modules
          key: ${{ runner.os }}-yarn-${{ hashFiles('yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-
      - name: Install dependencies
        if: steps.cache-nodemodules.outputs.cache-hit != 'true'
        run: yarn install --immutable --immutable-cache
      - name: Save node_modules to cache
        if: steps.cache-nodemodules.outputs.cache-hit != 'true'
        uses: actions/cache/save@v3
        with:
          path: node_modules
          key: ${{ runner.os }}-yarn-${{ hashFiles('yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

  lighthouseci:
    runs-on: ubuntu-latest
    needs: [yarn]
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: 18
      - name: Restore cached node_modules
        uses: actions/cache@v3
        with:
          path: node_modules
          key: ${{ runner.os }}-yarn-${{ hashFiles('yarn.lock') }}
      - run: npm install -g @lhci/cli@0.9.x
      - run: yarn build --config ${{ inputs.storefront-x-config }}
      - run: >
          lhci collect --startServerCommand "yarn serve --compression"
          --url http://localhost:3000
          --url http://localhost:3000/${{ inputs.product-detail-page }}
          --url http://localhost:3000/${{ inputs.category-page }}
      - run: lhci upload
      - run: lhci assert
        env:
          LHCI_GITHUB_APP_TOKEN: ${{ secrets.LHCI_GITHUB_APP_TOKEN }}
