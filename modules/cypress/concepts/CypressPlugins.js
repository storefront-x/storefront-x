//@ts-check

import { GeneratingConcept } from '@storefront-x/core'
import path from 'node:path'
import fs from 'node:fs/promises'

export default class CypressPlugins extends GeneratingConcept {
  async before() {
    await this.clearCypressDir()
    await fs.mkdir(this.dst(), { recursive: true })
  }

  get directory() {
    return 'cypress/plugins'
  }

  get template() {
    return `// generated by Storefront X
/// <reference types="cypress" />

<%_ for (const item in records) { _%>
import ${
      this.exportAll ? '* as <%= records[item].importName %>' : '<%= records[item].importName %>'
    } from '<%= records[item].path %>'
<%_ } _%>

/**
 * @type {Cypress.PluginConfig}
 */
export default (on: any, config: any) => {
<%_ for (const [_, {importName}] of Object.entries(records)) { _%>
  <%= importName %>(on, config)
<%_ } _%>
}
`
  }

  dst() {
    return path.join(this.core.rootDir, this.directory)
  }

  get fileName() {
    return 'index.ts'
  }

  async clearCypressDir() {
    await fs.rm(this.cypressDir, { recursive: true, force: true })
  }

  get cypressDir() {
    return path.resolve(this.core.rootDir, this.directory)
  }
}
